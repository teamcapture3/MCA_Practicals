set serveroutput on;

CREATE TABLE SALARY_HISTORY (
ID VARCHAR2 (5) NOT NULL,
OLD_SALARY NUMBER NOT NULL,
NEW_SALARY NUMBER NOT NULL,
SALARY_DIFF NUMBER NOT NULL
);

// Q1 //
// INSERTING //
SELECT * FROM EMPLOYEE;

CREATE OR REPLACE TRIGGER SALARY
AFTER INSERT ON EMPLOYEE
FOR EACH ROW
BEGIN
INSERT INTO SALARY_HISTORY
(ID,OLD_SALARY,NEW_SALARY,SALARY_DIFF) VALUES
(:NEW.ID,:NEW.SALARY,:NEW.SALARY,ABS(:NEW.SALARY-:NEW.SALARY));
END;
/

INSERT INTO EMPLOYEE (ID, NAME, DOB, CITY, SALARY, D_NO)
VALUES ('33', 'Ninad', '3-AUG-1998', 'Mumbai', 75000, 'D33');

SELECT * FROM EMPLOYEE;
SELECT * FROM SALARY_HISTORY;

// UPDATING //
SELECT * FROM EMPLOYEE;

CREATE OR REPLACE TRIGGER EMPUPDATE
AFTER UPDATE ON EMPLOYEE
FOR EACH ROW
BEGIN
INSERT INTO SALARY_HISTORY
(ID,OLD_SALARY,NEW_SALARY,SALARY_DIFF) VALUES
(:OLD.ID,:OLD.SALARY,:NEW.SALARY,ABS(:NEW.SALARY-:OLD.SALARY));
END;
/

UPDATE EMPLOYEE SET SALARY=55000 WHERE ID=33;

SELECT * FROM EMPLOYEE;
SELECT * FROM SALARY_HISTORY;

// Q2 //
// 2.1 //
CREATE TABLE EMPLOYEE(
ID NUMBER(4) NOT NULL,
NAME VARCHAR2(10) NOT NULL,
BASIC NUMBER(8) NOT NULL,
DA NUMBER(8) NOT NULL,
HRA NUMBER(8) NOT NULL
);

CREATE TABLE EMPLOYEE_SALARY(
ID NUMBER(4) NOT NULL,
SALARY NUMBER(8) NOT NULL
);

CREATE OR REPLACE TRIGGER EMPINSERT
AFTER INSERT ON EMPLOYEE FOR EACH ROW
BEGIN
INSERT INTO EMPLOYEE_SALARY(ID,SALARY)
VALUES(:NEW.ID,:NEW.BASIC+:NEW.DA+:NEW.HRA);
END;
/

INSERT INTO EMPLOYEE (ID, NAME, BASIC, DA, HRA)
VALUES ('1', 'Ninad', 20000, 8000, 10000);

SELECT * FROM EMPLOYEE;
SELECT * FROM EMPLOYEE_SALARY;

// 2.2 //
CREATE OR REPLACE TRIGGER EMPUPDATE
AFTER UPDATE ON EMPLOYEE FOR EACH ROW
BEGIN
INSERT INTO EMPLOYEE_SALARY(ID,SALARY)
VALUES(:OLD.ID,:NEW.BASIC+:NEW.DA+:NEW.HRA);
END;
/

UPDATE EMPLOYEE SET DA=7000 WHERE ID=1;

SELECT * FROM EMPLOYEE;
SELECT * FROM EMPLOYEE_SALARY;